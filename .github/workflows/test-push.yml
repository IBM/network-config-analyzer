name: test-push

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

permissions:
  actions: read
  contents: read

jobs:
  test-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - name: Build Docker image
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        id: build_docker
        with:
          context: .
          push: false
      - name: Check Docker image
        run: docker run ${{ steps.build_docker.outputs.digest }} -h
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - uses: ./.github/actions/setup-nca-env
      - run: pip install flake8
      - name: Lint with flake8
        run: flake8 network-config-analyzer --count --max-complexity=15 --max-line-length=127 --statistics --ignore F401

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - uses: ./.github/actions/setup-nca-env
      - run: python tests/run_unittests.py
  all-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - uses: ./.github/actions/setup-nca-env
      - name: Run all tests
        env:
          GHE_TOKEN: ${{ github.token }}
        run: python tests/run_all_tests.py --type=general --check_run_time | tee tests/run_log.txt ; test ${PIPESTATUS[0]} -eq 0
      - name: upload run_all_tests log
        if: ${{ always() }}
        uses: actions/upload-artifact@6673cd052c4cd6fcf4b4e6e60ea986c889389535
        with:
          name: run-alltests-log
          path: tests/run_log.txt
      - name: Upload failed run-time tests file
        uses: actions/upload-artifact@6673cd052c4cd6fcf4b4e6e60ea986c889389535
        with:
          name: failed-run-time-check-file
          path: ./tests/tests_failed_runtime_check.csv
          if-no-files-found: ignore 
  fw-rules-assertion-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - uses: ./.github/actions/setup-nca-env
      - run:  python tests/run_all_tests.py --type=fw_rules_assertions
  live-cluster:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - uses: ./.github/actions/setup-nca-env
      - uses: helm/kind-action@94729529f85113b88f4f819c17ce61382e6d8478
      - run:  python tests/run_all_tests.py --type=k8s_live_general
  rest-api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
      - uses: ./.github/actions/setup-nca-env
      - run: |
          python network-config-analyzer/nca.py --daemon &
          NCA_PID=$!
          while true; do  # wait until REST server becomes responsive
            curl localhost:5000
            curl_status=$?
            [ $curl_status -gt 0 ]  || break
            sleep 1
          done
          curl -X POST -H Content-Type:application/json -d @tests/k8s_testcases/example_podlist/ns_list.json localhost:5000/namespace_list
          curl_status=$?
          [ $curl_status -eq 0 ] || exit 1
          curl -X POST -H Content-Type:application/json -d @tests/k8s_testcases/example_podlist/pods_list.json localhost:5000/pod_list
          curl_status=$?
          [ $curl_status -eq 0 ] || exit 1
          curl -X POST -H Content-Type:application/json -d @tests/k8s_testcases/example_policies/testcase1/testcase1-networkpolicy1.json localhost:5000/policy_sets
          curl_status=$?
          [ $curl_status -eq 0 ] || exit 1
          curl localhost:5000/policy_sets/set_0/findings
          curl_status=$?
          [ $curl_status -eq 0 ] || exit 1
          kill $NCA_PID
          exit 0
