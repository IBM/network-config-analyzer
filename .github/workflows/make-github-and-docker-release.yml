name: Create docker release and github release

on:
  workflow_dispatch:
  pull_request:
    branches: [master]
    types: [closed]
    paths: ["nca/VERSION.txt"]

permissions:
  contents: read

jobs:
  push_to_registry:
    if: github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch'
    name: Push a Docker image to the Docker Hub and create a github release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f

      - name: Setup NCA environment
        uses: ./.github/actions/setup-nca-env

      - name: Set the version number
        run: |
          export VERSION=$(cat nca/VERSION.txt)
          echo "version=$VERSION" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56
        with:
          context: .
          push: true
          tags: ghcr.io/ibm/nca:${{ env.version }}

      - name: Build and push ubi-based Docker image
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56
        with:
          context: .
          file: Dockerfile.ubi
          push: true
          tags: ghcr.io/ibm/nca:${{ env.version }}-ubi

      - name: Create and push a new git tag
        run: |
          git config user.name ${{ github.actor }}
          git tag -a v${{ env.version }} -m "Version ${{ env.version }}"
          git push origin v${{ env.version }}

      - name: Create a github release
        uses: actions/create-release@0cb9c9b65d5d1901c1f53e5e66eaf4afd303e70e
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.version }}
          release_name: Release v${{ env.version }}
          body: |
            Changes in this Release:
          draft: false
          prerelease: false

      - name: Build package
        run: |
          pip install build==0.10.0
          python -m build

      - name: Push version to PyPi
        uses: pypa/gh-action-pypi-publish@81e9d935c883d0b210363ab89cf05f3894778450
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
