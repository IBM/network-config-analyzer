
apiVersion: v1
kind: Service
metadata:
  name: ingress-nginx-controller
  namespace: kube-system
spec:
  type: NodePort
  selector:
    app.kubernetes.io/name: ingress-nginx
    app: keepalived-watcher
  ports:
    - appProtocol: https
      name: https-webhook
      port: 443
      protocol: TCP
      targetPort: webhook
---

apiVersion: v1
kind: Service
metadata:
  name: skydive
  namespace: default
spec:
  type: ClusterIP
  selector:
    app: skydive
  ports:
    - appProtocol: http
      name: http
      nodePort: 30308
      port: 80
      protocol: TCP
      targetPort: http
---

apiVersion: v1
kind: Service
metadata:
  name: keepalived
  namespace: vendor-system
spec:
  type: ClusterIP
  selector:
    weird-lb-app-name: keepalived
  ports:
    - appProtocol: http
      name: http
      nodePort: 30308
      port: 80
      protocol: TCP
      targetPort: http
---

apiVersion: v1
kind: Service
metadata:
  name: calico-node
  namespace: kube-system
spec:
  type: ClusterIP
  selector:
    k8s-app: calico-node
  ports:
    - appProtocol: http
      name: http
      nodePort: 30308
      port: 70
      protocol: TCP
      targetPort: http

    - appProtocol: TCP
      name: TCP
      port: 80
      protocol: TCP
      targetPort: calico-node-port
---

apiVersion: v1
kind: Service
metadata:
  name: file-plugin
  namespace: kube-system
spec:
  type: ClusterIP
  selector:
    app: file-plugin
  ports:
    - appProtocol: http
      name: http
      nodePort: 30308
      port: 80
      protocol: TCP
      targetPort: http
---

apiVersion: v1
kind: Service
metadata:
  name: kube-fluentd
  namespace: kube-system
spec:
  type: ClusterIP
  selector:
    app: kube-fluentd
  ports:
    - appProtocol: http
      name: http
      nodePort: 30308
      port: 80
      protocol: TCP
      targetPort: http
---

apiVersion: v1
kind: Service
metadata:
  name: storage-watcher
  namespace: kube-system
spec:
  type: ClusterIP
  selector:
    app: storage-watcher
  ports:
    - appProtocol: http
      name: http
      nodePort: 30308
      port: 80
      protocol: TCP
      targetPort: my_watcher_port
---

apiVersion: v1
kind: Service
metadata:
  name: kube-dns
  namespace: kube-system
spec:
  type: ClusterIP
  selector:
    k8s-app: kube-dns
  ports:
    - appProtocol: dns
      name: dns
      nodePort: 30308
      port: 80
      protocol: TCP
      targetPort: dns-tcp
