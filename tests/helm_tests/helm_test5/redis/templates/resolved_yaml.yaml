apiVersion: v1
kind: Namespace
metadata:
  name: default
  labels:
    ns: def
---
apiVersion: v1
kind: Namespace
metadata:
  name: ns1
  labels:
    ns: ns1
    app: appB
---
apiVersion: v1
kind: Namespace
metadata:
  name: ns2
  labels:
    ns: ns2
---
apiVersion: v1
kind: Namespace
metadata:
  name: ns3
  labels:
    ns: ns3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-A
  namespace: ns1
  labels:
    dep: A
spec:
  replicas: 3
  selector:
    matchLabels:
      dep: A
  template:
    metadata:
      labels:
        dep: A
    spec:
      containers:
        - name: my-test-app
          image: nginx
          ports:
            - containerPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-B
  namespace: ns1
  labels:
    dep: B
spec:
  replicas: 2
  selector:
    matchLabels:
      dep: B
  template:
    metadata:
      labels:
        dep: B
        app: appA
        release: v22b
    spec:
      containers:
        - name: my-test-nginx
          image: nginx
          ports:
            - containerPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-C
  namespace: ns2
  labels:
    dep: C
spec:
  replicas: 3
  selector:
    matchLabels:
      dep: C
  template:
    metadata:
      labels:
        dep: C
    spec:
      containers:
        - name: nginx
          image: nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-D
  namespace: ns2
  labels:
    dep: D
spec:
  replicas: 3
  selector:
    matchLabels:
      dep: D
  template:
    metadata:
      labels:
        dep: D
    spec:
      containers:
        - name: nginx
          image: nginx
          ports:
            - containerPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-E
  labels:
    dep: E
spec:
  replicas: 3
  selector:
    matchLabels:
      dep: E
  template:
    metadata:
      labels:
        dep: E
        app: appA
        release: v22b
      spec:
      containers:
        - name: nginx
          image: nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-Eb
  labels:
    dep: Eb
spec:
  replicas: 3
  selector:
    matchLabels:
      dep: Eb
  template:
    metadata:
      labels:
        dep: Eb
        app: appAb
        release: v22bb
      spec:
      containers:
        - name: nginx
          image: nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-F
  namespace: ns2
  labels:
    dep: F
spec:
  replicas: 3
  selector:
    matchLabels:
      dep: F
  template:
    metadata:
      labels:
        dep: F
        release: v22b
    spec:
      containers:
        - name: nginx
          image: nginx
          ports:
            - containerPort: 80
---
apiVersion: apps/v1
kind: Pod
metadata:
  name: Pod1
  labels:
    pod: p1
    zone: C
spec:
  containers:
    - name: nginx
      image: nginx
---
apiVersion: apps/v1
kind: Pod
metadata:
  name: Pod2
  namespace: ns1
  labels:
    pod: p2
spec:
  containers:
    - name: nginx
      image: nginx
---
apiVersion: apps/v1
kind: Pod
metadata:
  name: Pod3
  namespace: ns2
  labels:
    pod: p3
spec:
  containers:
    - name: nginx
      image: nginx
---
apiVersion: apps/v1
kind: Pod
metadata:
  name: Pod4
  labels:
    app: appB
    pod: p4
spec:
  containers:
    - name: nginx
      image: nginx
---
apiVersion: apps/v1
kind: Pod
metadata:
  name: Pod5
  labels:
    pod: p5
    app: appB
spec:
  containers:
    - name: nginx
      image: nginx
---
apiVersion: apps/v1
kind: Pod
metadata:
  name: Pod6
  namespace: ns2
  labels:
    pod: p6
spec:
  containers:
    - name: nginx
      image: nginx
---
apiVersion: apps/v1
kind: Pod
metadata:
  name: Pod7
  namespace: ns3
  labels:
    pod: p7
spec:
  containers:
    - name: nginx
      image: nginx
---
apiVersion: apps/v1
kind: Pod
metadata:
  name: Pod8
  namespace: ns3
  labels:
    pod: p8
    app: appA
    release: v22b
spec:
  containers:
    - name: nginx
      image: nginx
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: pod1aconfig
#  namespace: ns1
spec:
  podSelector:
    matchLabels:
      pod: p1
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              ns: ns1
          podSelector:
            matchLabels:
              pod: p2
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              ns: ns2
          podSelector:
            matchLabels:
              pod: p3
        - namespaceSelector:
            matchLabels:
              ns: ns3
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: pod2config
  namespace: ns1
spec:
  podSelector:
    matchLabels:
      pod: p2
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              ns: def
          podSelector:
            matchLabels:
              pod: p4
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              ns: def
          podSelector:
            matchLabels:
              pod: p1
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: pod3config
  namespace: ns2
spec:
  podSelector:
    matchLabels:
      pod: p3
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              ns: def
          podSelector:
            matchLabels:
              pod: p1
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: pod4config
#  namespace: ns1
spec:
  podSelector:
    matchLabels:
      pod: p4
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              ns: ns3
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              ns: ns1
          podSelector:
            matchLabels:
              pod: p2
        - namespaceSelector:
            matchLabels:
              ns: ns2
          podSelector:
            matchLabels:
              dep: D
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: pod5config
#  namespace: ns1
spec:
  podSelector:
    matchLabels:
      pod: p5
  policyTypes:
    - Ingress
    - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: pod6config
  namespace: ns2
spec:
  podSelector:
    matchLabels:
      pod: p6
  policyTypes:
    - Ingress
    - Egress
---
# pod7config, pod8config - are configured implicitly by the namespace configurations.
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deny-all-default
  namespace: default
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deny-all-n1
  namespace: ns1
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deny-all-n2
  namespace: ns2
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: config-n3
  namespace: ns3
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              ns: def
          podSelector:
            matchLabels:
              pod: p1
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              ns: def
          podSelector:
            matchLabels:
              pod: p4
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dep-a
  namespace: ns1
spec:
  podSelector:
    matchLabels:
      dep: A
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              ns: ns2
          podSelector:
            matchLabels:
              dep: C
        - podSelector:
            matchLabels:
              dep: B
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              ns: def
          podSelector:
            matchLabels:
              dep: E
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dep-b
  namespace: ns1
spec:
  podSelector:
    matchLabels:
      dep: B
  policyTypes:
    - Ingress
    - Egress
  egress:
    - to:
        - podSelector:
            matchLabels:
              dep: A
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dep-c
  namespace: ns2
spec:
  podSelector:
    matchLabels:
      dep: C
  policyTypes:
    - Egress
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              ns: ns1
          podSelector:
            matchLabels:
              dep: A
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dep-d
  namespace: ns2
spec:
  podSelector:
    matchLabels:
      dep: D
  policyTypes:
    - Ingress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              ns: def
          podSelector:
            matchLabels:
              pod: p4
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dep-e
spec:
  podSelector:
    matchLabels:
      dep: E
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              ns: ns1
          podSelector:
            matchLabels:
              dep: A
---