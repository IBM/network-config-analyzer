final fw rules for query: , config: **:
src: 0.0.0.0/0 dst_ns: [default] dst_pods: [app.kubernetes.io/instance=nca-extract and app.kubernetes.io/name=grafana] conn: TCP 3000
src: 0.0.0.0/0 dst_ns: [default] dst_pods: [app.kubernetes.io/instance=nca-extract and app.kubernetes.io/name=redis] conn: TCP 6379,9121
src: 0.0.0.0/0 dst_ns: [default] dst_pods: [{!has(app.kubernetes.io/instance) or app.kubernetes.io/instance=nca-extract} and {!has(app.kubernetes.io/name) or app.kubernetes.io/name=kube-state-metrics}] conn: All connections
src: ::/0 dst_ns: [default] dst_pods: [app.kubernetes.io/instance=nca-extract and app.kubernetes.io/name=grafana] conn: TCP 3000
src: ::/0 dst_ns: [default] dst_pods: [app.kubernetes.io/instance=nca-extract and app.kubernetes.io/name=redis] conn: TCP 6379,9121
src: ::/0 dst_ns: [default] dst_pods: [{!has(app.kubernetes.io/instance) or app.kubernetes.io/instance=nca-extract} and {!has(app.kubernetes.io/name) or app.kubernetes.io/name=kube-state-metrics}] conn: All connections
src_ns: [default] src_pods: [*] dst: 0.0.0.0/0 conn: UDP 53
src_ns: [default] src_pods: [*] dst: ::/0 conn: UDP 53
src_ns: [default] src_pods: [*] dst_ns: [default] dst_pods: [app.kubernetes.io/instance=nca-extract and app.kubernetes.io/name=redis] conn: TCP 6379
src_ns: [default] src_pods: [*] dst_ns: [default] dst_pods: [{!has(app.kubernetes.io/instance) or app.kubernetes.io/instance=nca-extract} and {!has(app.kubernetes.io/name) or app.kubernetes.io/name=kube-state-metrics}] conn: UDP 53
src_ns: [default] src_pods: [{!has(app.kubernetes.io/instance) or app.kubernetes.io/instance=nca-extract} and {!has(app.kubernetes.io/name) or (has(app.kubernetes.io/name) and app.kubernetes.io/name!=redis)}] dst: 0.0.0.0/0 conn: All connections
src_ns: [default] src_pods: [{!has(app.kubernetes.io/instance) or app.kubernetes.io/instance=nca-extract} and {!has(app.kubernetes.io/name) or (has(app.kubernetes.io/name) and app.kubernetes.io/name!=redis)}] dst: ::/0 conn: All connections
src_ns: [default] src_pods: [{!has(app.kubernetes.io/instance) or app.kubernetes.io/instance=nca-extract} and {!has(app.kubernetes.io/name) or (has(app.kubernetes.io/name) and app.kubernetes.io/name!=redis)}] dst_ns: [default] dst_pods: [!has(app.kubernetes.io/instance) and !has(app.kubernetes.io/name)] conn: All connections
src_ns: [default] src_pods: [{!has(app.kubernetes.io/instance) or app.kubernetes.io/instance=nca-extract} and {!has(app.kubernetes.io/name) or (has(app.kubernetes.io/name) and app.kubernetes.io/name!=redis)}] dst_ns: [default] dst_pods: [app.kubernetes.io/instance=nca-extract and app.kubernetes.io/name=grafana] conn: TCP 3000
src_ns: [default] src_pods: [{!has(app.kubernetes.io/instance) or app.kubernetes.io/instance=nca-extract} and {!has(app.kubernetes.io/name) or (has(app.kubernetes.io/name) and app.kubernetes.io/name!=redis)}] dst_ns: [default] dst_pods: [app.kubernetes.io/instance=nca-extract and app.kubernetes.io/name=redis] conn: TCP 6379,9121
src_ns: [default] src_pods: [{!has(app.kubernetes.io/instance) or app.kubernetes.io/instance=nca-extract} and {!has(app.kubernetes.io/name) or app.kubernetes.io/name=grafana}] dst_ns: [default] dst_pods: [nca-extract-kube-state-metrics] conn: All connections

