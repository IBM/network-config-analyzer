# specification of files from which should generate tests:
# each spec consists of args as follows:
#   name: just for documentation, describe test purposes
#   type: scheme / cmdline
#   root: root dir of scheme files (or cmdline_tests files) to use (recursively)
#   files_list: test only files from this list (not all files that are found from the root dir) [mandatory for cmdline tests]

# additional args relevant only for k8s_live_general tests:
# cluster_config: dict of the form {pods: pods_yaml_path , policies: policies_yaml_path}

#---------------------------------------------------------------------------------------------------------------------------------
general:
  # 1:  all scheme files in tests/   (including all sub-dirs)
  - name: all_scheme_tests
    type: scheme
    root: ./

  # 2: all cli queries in tests/k8s_cmdline_tests.yaml
  - name: general_cmdline_tests
    type: cmdline
    root: ./
    files_list:
      - k8s_cmdline_tests.yaml

#---------------------------------------------------------------------------------------------------------------------------------
k8s_live_general:
  # 1: all cli queries in tests/cmdline_live_k8s_tests.yaml
  - name: k8s_live_general_cmdline_tests
    type: cmdline
    root: ./
    cluster_config:
      pods: fw_rules_tests/podlist/kubernetes-manifests.yaml
      policies: fw_rules_tests/policies/microservices-netpols.yaml
    files_list:
      - cmdline_live_k8s_tests.yaml

#----------------------------------------------------------------------------------------------------------------------------------
# fw_rules_assertions: activate assertions to verify equivalence of  fw_rules output (semantically) to the input connectivity graph.
fw_rules_assertions:
  # 1:  all scheme files under tests/fw_rules_tests/policies/
  - name: all_scheme_tests
    type: scheme
    root: fw_rules_tests/policies/
    activate_output_config_flag: fwRulesRunInTestMode

#---------------------------------------------------------------------------------------------------------------------------------
