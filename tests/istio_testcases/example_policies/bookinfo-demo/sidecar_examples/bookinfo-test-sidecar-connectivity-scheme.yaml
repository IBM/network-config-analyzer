
networkConfigList:
  - name: mixed-sidecar
    resourceList:
      - bookinfo-topology
      - service_entry_resources/bookinfo-service-entry-1.yaml
      - sidecar-w-internal-external-services.yaml

  - name: mixed-sidecar-registry-only
    resourceList:
      - bookinfo-topology
      - service_entry_resources/bookinfo-service-entry-1.yaml
      - sidecar-w-internal-external-services-registry-only.yaml

  - name: allow-all-sidecar
    resourceList:
      - bookinfo-topology
      - service_entry_resources/external-https-wildcard-services.yaml
      - sidecar-allows-any.yaml

  # in the following config we have 2 service entries with some common hosts in both but different ports, we want to check
  # that the connections to these common hosts is allowed in both ports (considering the src namespace - if included in exportTo)
  - name: allow-all-sidecar-multiple-service-entry
    resourceList:
      - bookinfo-topology
      - service_entry_resources/external-https-wildcard-services.yaml
      - service_entry_resources/external-https-services-less-hosts-and-different-port.yaml
      - sidecar-allows-any.yaml

  # this config includes a service-entry with general host name "*.wikipedia.org", while the sidecar supports egress
  # to the specific "en.wikipedia.org" - from testing on live cluster , this is not considered as match,
  # and we don't expect to see the host name in the selected peers connection list
  - name: sidecar-w-specific-host-name
    resourceList:
      - bookinfo-topology
      - service_entry_resources/external-https-wildcard-services.yaml
      - sidecar-w-specific-host.yaml

  # this config includes a service-entry with specific host name "api.facebook.com", while the sidecar supports egress
  # to the general "*.facebook.com" (a service-entry match) - according to live-cluster we expect to see
  # "api.facebook.com" (the dns-entry name) in the selected peers connection-list
  - name: sidecar-w-general-host-name
    resourceList:
      - bookinfo-topology
      - service_entry_resources/external-https-wildcard-services.yaml
      - sidecar-w-general-host.yaml

queries:
  - name: connectivity-internal-external
    connectivityMap:
      - mixed-sidecar
    expectedOutput: ../../../expected_output/connectivity_internal_external_sidecar.txt
    expected: 0

  - name: connectivity-internal-external-registry-only
    connectivityMap:
      - mixed-sidecar-registry-only
    expectedOutput: ../../../expected_output/connectivity_internal_external_sidecar_registry_only.txt
    expected: 0

  - name: connectivity-allow-any
    connectivityMap:
      - allow-all-sidecar
    expectedOutput: ../../../expected_output/connectivity_bookinfo_ratings_allow_any_sidecar.txt
    expected: 0

  - name: connectivity-allow-any-multiple-service-entries
    connectivityMap:
      - allow-all-sidecar-multiple-service-entry
    expectedOutput: ../../../expected_output/connectivity_bookinfo_ratings_allow_any_sidecar_multiple_service_entries.txt
    expected: 0

  - name: connectivity-sidecar-host-name-does-not-contain-service-entry-hosts
    connectivityMap:
      - sidecar-w-specific-host-name  # if the sidecar's host is more specified than the service-entry host (does not contain it) it will not be considered in the connections of selected peers
    expectedOutput: ../../../expected_output/connectivity_sidecar_host_name_does_not_contain_se_hosts.txt
    expected: 0

  - name: connectivity-sidecar-host-name-contains-service-entry-hosts
    connectivityMap:
      - sidecar-w-general-host-name  # if the sidecar's host contains any service-entry host, the service-entry's host will be added to the connections of selected peers
    expectedOutput: ../../../expected_output/connectivity_sidecar_host_name_contains_service_entry_hosts.txt
    expected: 0