apiVersion: v1
kind: ServiceAccount
metadata:
  name: checkoutservice
  namespace: onlineboutique
  annotations:
    iam.gke.io/gcp-service-account: onlineboutique-gsa@mygke-200.iam.gserviceaccount.com
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: checkoutservice
  namespace: onlineboutique
spec:
  selector:
    matchLabels:
      app: checkoutservice
  template:
    metadata:
      labels:
        app: checkoutservice
    spec:
      serviceAccountName: checkoutservice
      containers:
        - name: server
          image: us-east4-docker.pkg.dev/mygke-200/containers/boutique/checkoutservice:v0.3.7
          ports:
          - containerPort: 5050
          readinessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:5050"]
          livenessProbe:
            exec:
              command: ["/bin/grpc_health_probe", "-addr=:5050"]
          env:
          - name: PORT
            value: "5050"
          - name: PRODUCT_CATALOG_SERVICE_ADDR
            value: "productcatalogservice:3550"
          - name: SHIPPING_SERVICE_ADDR
            value: "shippingservice:50051"
          - name: PAYMENT_SERVICE_ADDR
            value: "paymentservice:50051"
          - name: EMAIL_SERVICE_ADDR
            value: "emailservice:5000"
          - name: CURRENCY_SERVICE_ADDR
            value: "currencyservice:7000"
          - name: CART_SERVICE_ADDR
            value: "cartservice:7070"
          - name: DISABLE_STATS
            value: "1"
          - name: DISABLE_TRACING
            value: "1"
          - name: DISABLE_PROFILER
            value: "1"
          # - name: JAEGER_SERVICE_ADDR
          #   value: "jaeger-collector:14268"
          resources:
            requests:
              cpu: 15m
              memory: 29Mi
            limits:
              cpu: 40m
              memory: 152Mi
---
apiVersion: v1
kind: Service
metadata:
  name: checkoutservice
  namespace: onlineboutique
spec:
  type: ClusterIP
  selector:
    app: checkoutservice
  ports:
  - name: grpc
    port: 5050
    targetPort: 5050
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: checkoutservice
  namespace: onlineboutique
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: checkoutservice
  updatePolicy:
    updateMode: "Off"
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: checkoutservice
  namespace: onlineboutique
spec:
  podSelector:
    matchLabels:
      app: checkoutservice
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: frontend
    ports:
     - port: 5050
       protocol: TCP
  egress:
  - {}
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: checkoutservice
  namespace: onlineboutique
spec:
  selector:
    matchLabels:
      app: checkoutservice
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/onlineboutique/sa/frontend"]
    to:
      - operation:
          paths: ["/hipstershop.CheckoutService/PlaceOrder"]
          methods: ["POST"]
          ports: ["5050"]
---
apiVersion: networking.istio.io/v1beta1
kind: Sidecar
metadata:
  name: checkoutservice
  namespace: onlineboutique
spec:
  workloadSelector:
    labels:
      app: checkoutservice
  egress:
  - hosts:
    - "istio-system/*"
    - "./cartservice.onlineboutique.svc.cluster.local"
    - "./currencyservice.onlineboutique.svc.cluster.local"
    - "./emailservice.onlineboutique.svc.cluster.local"
    - "./paymentservice.onlineboutique.svc.cluster.local"
    - "./productcatalogservice.onlineboutique.svc.cluster.local"
    - "./shippingservice.onlineboutique.svc.cluster.local"