apiVersion: v1
kind: ServiceAccount
metadata:
  name: adservice
  namespace: onlineboutique
  annotations:
    iam.gke.io/gcp-service-account: onlineboutique-gsa@mygke-200.iam.gserviceaccount.com
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adservice
  namespace: onlineboutique
spec:
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      labels:
        app: adservice
    spec:
      serviceAccountName: adservice
      terminationGracePeriodSeconds: 5
      containers:
      - name: server
        image: us-east4-docker.pkg.dev/mygke-200/containers/boutique/adservice:v0.3.7
        ports:
        - containerPort: 9555
        env:
        - name: PORT
          value: "9555"
        - name: DISABLE_STATS
          value: "1"
        - name: DISABLE_TRACING
          value: "1"
        #- name: JAEGER_SERVICE_ADDR
        #  value: "jaeger-collector:14268"
        resources:
          requests:
            cpu: 200m
            memory: 180Mi
          limits:
            cpu: 300m
            memory: 300Mi
        readinessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          timeoutSeconds: 30
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:9555"]
        livenessProbe:
          initialDelaySeconds: 20
          periodSeconds: 15
          timeoutSeconds: 30
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:9555"]
---
apiVersion: v1
kind: Service
metadata:
  name: adservice
  namespace: onlineboutique
spec:
  type: ClusterIP
  selector:
    app: adservice
  ports:
  - name: grpc
    port: 9555
    targetPort: 9555
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: adservice
  namespace: onlineboutique
spec:
  targetRef:
    apiVersion: "apps/v1"
    kind: Deployment
    name: adservice
  updatePolicy:
    updateMode: "Off"
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: adservice
  namespace: onlineboutique
spec:
  podSelector:
    matchLabels:
      app: adservice
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: frontend
    ports:
     - port: 9555
       protocol: TCP
  egress:
  - {}
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: adservice
  namespace: onlineboutique
spec:
  selector:
    matchLabels:
      app: adservice
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/onlineboutique/sa/frontend"]
    to:
      - operation:
          paths: ["/hipstershop.AdService/GetAds"]
          methods: ["POST"]
          ports: ["9555"]
---
apiVersion: networking.istio.io/v1beta1
kind: Sidecar
metadata:
  name: adservice
  namespace: onlineboutique
spec:
  workloadSelector:
    labels:
      app: adservice
  egress:
  - hosts:
    - "istio-system/*"
