apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: checkoutservice-netpol
spec:
  egress:
  - ports:
    - port: 8080
    to:
    - podSelector:
        matchLabels:
          app: emailservice
  - ports:
    - port: 50051
    to:
    - podSelector:
        matchLabels:
          app: paymentservice
  - ports:
    - port: 3550
    to:
    - podSelector:
        matchLabels:
          app: productcatalogservice
  - ports:
    - port: 7070
    to:
    - podSelector:
        matchLabels:
          app: cartservice
  - ports:
    - port: 7000
    to:
    - podSelector:
        matchLabels:
          app: currencyservice
  - ports:
    - port: 50051
    to:
    - podSelector:
        matchLabels:
          app: shippingservice
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector: {}
      podSelector:
        matchLabels:
          k8s-app: kube-dns
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: frontend
    ports:
    - port: 5050
  podSelector:
    matchLabels:
      app: checkoutservice
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: emailservice-netpol
spec:
  egress: []
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: checkoutservice
    ports:
    - port: 8080
  podSelector:
    matchLabels:
      app: emailservice
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: frontend-netpol
spec:
  egress:
  - ports:
    - port: 5050
    to:
    - podSelector:
        matchLabels:
          app: checkoutservice
  - ports:
    - port: 8080
    to:
    - podSelector:
        matchLabels:
          app: recommendationservice
  - ports:
    - port: 3550
    to:
    - podSelector:
        matchLabels:
          app: productcatalogservice
  - ports:
    - port: 7070
    to:
    - podSelector:
        matchLabels:
          app: cartservice
  - ports:
    - port: 7000
    to:
    - podSelector:
        matchLabels:
          app: currencyservice
  - ports:
    - port: 50051
    to:
    - podSelector:
        matchLabels:
          app: shippingservice
  - ports:
    - port: 9555
    to:
    - podSelector:
        matchLabels:
          app: adservice
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector: {}
      podSelector:
        matchLabels:
          k8s-app: kube-dns
  ingress:
  - from:
    - podSelector: {}
    ports:
    - port: 8080
  - from:
    - podSelector:
        matchLabels:
          app: loadgenerator
    ports:
    - port: 8080
  - ports:
    - port: 8080
  podSelector:
    matchLabels:
      app: frontend
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: recommendationservice-netpol
spec:
  egress:
  - ports:
    - port: 3550
    to:
    - podSelector:
        matchLabels:
          app: productcatalogservice
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector: {}
      podSelector:
        matchLabels:
          k8s-app: kube-dns
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: frontend
    ports:
    - port: 8080
  podSelector:
    matchLabels:
      app: recommendationservice
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: loadgenerator-netpol
spec:
  egress:
  - ports:
    - port: 8080
    to:
    - podSelector:
        matchLabels:
          app: frontend
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector: {}
      podSelector:
        matchLabels:
          k8s-app: kube-dns
  ingress: []
  podSelector:
    matchLabels:
      app: loadgenerator
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: paymentservice-netpol
spec:
  egress: []
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: checkoutservice
    ports:
    - port: 50051
  podSelector:
    matchLabels:
      app: paymentservice
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: productcatalogservice-netpol
spec:
  egress: []
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: checkoutservice
    ports:
    - port: 3550
  - from:
    - podSelector:
        matchLabels:
          app: recommendationservice
    ports:
    - port: 3550
  - from:
    - podSelector:
        matchLabels:
          app: frontend
    ports:
    - port: 3550
  podSelector:
    matchLabels:
      app: productcatalogservice
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: cartservice-netpol
spec:
  egress:
  - ports:
    - port: 6379
    to:
    - podSelector:
        matchLabels:
          app: redis-cart
  - ports:
    - port: 53
      protocol: UDP
    to:
    - namespaceSelector: {}
      podSelector:
        matchLabels:
          k8s-app: kube-dns
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: checkoutservice
    ports:
    - port: 7070
  - from:
    - podSelector:
        matchLabels:
          app: frontend
    ports:
    - port: 7070
  podSelector:
    matchLabels:
      app: cartservice
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: currencyservice-netpol
spec:
  egress: []
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: checkoutservice
    ports:
    - port: 7000
  - from:
    - podSelector:
        matchLabels:
          app: frontend
    ports:
    - port: 7000
  podSelector:
    matchLabels:
      app: currencyservice
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: shippingservice-netpol
spec:
  egress: []
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: checkoutservice
    ports:
    - port: 50051
  - from:
    - podSelector:
        matchLabels:
          app: frontend
    ports:
    - port: 50051
  podSelector:
    matchLabels:
      app: shippingservice
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: redis-cart-netpol
spec:
  egress: []
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: cartservice
    ports:
    - port: 6379
  podSelector:
    matchLabels:
      app: redis-cart
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: adservice-netpol
spec:
  egress: []
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: frontend
    ports:
    - port: 9555
  podSelector:
    matchLabels:
      app: adservice
  policyTypes:
  - Ingress
  - Egress
