namespaceList: ../../example_podlist/services1/ns_list.yaml
podList: ../../example_podlist/services1/

networkConfigList:
  - name: ip
    networkPolicyList:
      - policies.yaml
    expectedWarnings: 0

  - name: np1
    networkPolicyList:
      - services1-networkpolicy1.yaml
      - policies.yaml
    expectedWarnings: 0

  - name: np2
    networkPolicyList:
      - services1-networkpolicy2.yaml
      - policies.yaml
    expectedWarnings: 0

queries:
  - name: connectivity_map
    connectivityMap:
    - ip
    - np1
    - np2
    expected: 0
    outputConfiguration:
      outputFormat: txt
      fwRulesRunInTestMode: false

  - name: sanity
    sanity:
      - np1
    expected: 2

  - name: compare_np1_and_np2
    twoWayContainment:
      - np1
      - np2
    expected: 0
  - name: np1_and_np2_are_not_strongly_equivalent
    strongEquivalence:
      - np1
      - np2
    expected: 1
  - name: np1_and_np1_are_strongly_equivalent
    strongEquivalence:
      - np1
      - np1
    expected: 0
  - name: compare_specific_policies_in_np1_and_np2
    equivalence:
      - np1/ingress-nginx/allow-egress-deny-ingress-within-namespace
      - np2/ingress-nginx/allow-ingress-deny-egress-within-namespace
      - np1/ingress-nginx/allow-webhook-via-ingress
    expected: 2
  - name: redundancy_np1_and_np2
    redundancy:
      - np1
      - np2
    expected: 4
  - name: pairwiseInterferes_np1_and_np2
    pairwiseInterferes:
      - np1
      - np2
    expected: 2

  - name: not_empty
    emptiness:
      - np1
      - np2
    expected: 0
  - name: not_vacuous
    vacuity:
      - np1
      - np2

  - name: containment_np1_and_np2
    containment:
      - np1
      - np2
    expected: 0
  - name: containment_np2_and_np1
    containment:
      - np2
      - np1
    expected: 0
